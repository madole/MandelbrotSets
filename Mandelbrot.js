// Generated by CoffeeScript 1.8.0
(function() {
  var Mandelbrot, Mandeliter;

  Mandeliter = function(cx, cy, maxiter) {
    var i, x, xx, xy, y, yy;
    x = 0.0;
    y = 0.0;
    xx = 0;
    yy = 0;
    xy = 0;
    i = maxiter;
    while (i-- && xx + yy <= 4) {
      xy = x * y;
      xx = x * x;
      yy = y * y;
      x = xx - yy + cx;
      y = xy + xy + cy;
    }
    return maxiter - i;
  };

  Mandelbrot = function(width, height, xmin, xmax, ymin, ymax, iterations) {
    var c, canvas, ctx, i, img, ix, iy, pix, ppos, x, y, _i, _j;
    canvas = document.createElement('canvas');
    canvas.width = width;
    canvas.height = height;
    ctx = canvas.getContext('2d');
    img = ctx.getImageData(0, 0, width, height);
    pix = img.data;
    for (ix = _i = 0; 0 <= width ? _i <= width : _i >= width; ix = 0 <= width ? ++_i : --_i) {
      for (iy = _j = 0; 0 <= height ? _j <= height : _j >= height; iy = 0 <= height ? ++_j : --_j) {
        x = xmin + (xmax - xmin) * ix / (width - 1);
        y = ymin + (ymax - ymin) * iy / (height - 1);
        i = Mandeliter(x, y, iterations);
        ppos = 4 * (width * iy + ix);
        if (i === iterations) {
          pix[ppos] = 0;
          pix[ppos + 1] = 0;
          pix[ppos + 2] = 0;
        } else {
          c = 3 * Math.log(i) / Math.log(iterations - 1.0);
          if (c < 1) {
            pix[ppos] = 225 * c;
            pix[ppos + 1] = 0;
            pix[ppos + 2] = 0;
          } else if (c < 2) {
            pix[ppos] = 255;
            pix[ppos + 1] = 255 * (c - 1);
            pix[ppos + 2] = 0;
          } else {
            pix[ppos] = 255;
            pix[ppos + 1] = 255;
            pix[ppos + 2] = 255 * (c - 2);
          }
        }
        pix[ppos + 3] = 255;
      }
    }
    ctx.putImageData(img, 0, 0);
    return document.body.insertBefore(canvas, document.body.childNodes[0]);
  };

  Mandelbrot(900, 600, -2, 1, -1, 1, 1000);

}).call(this);
